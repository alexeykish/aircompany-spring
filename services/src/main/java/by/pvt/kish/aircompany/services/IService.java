package by.pvt.kish.aircompany.services;

import by.pvt.kish.aircompany.exceptions.ServiceLoginException;
import by.pvt.kish.aircompany.exceptions.ServiceValidateException;
import by.pvt.kish.aircompany.exceptions.ServiceException;

import java.util.List;

/**
 * This interface represents a contract for a IService for the Entity models.
 *
 * @author Kish Alexey
 */
public interface IService<T> {

    /**
     * Create the given Entity
     *
     * @param t - entity to be created
     * @return - The entity, generated by DB
     * @throws ServiceException         - if something fails at Service layer
     * @throws ServiceValidateException - if something fails at Service validation
     */
    T add(T t) throws ServiceException, ServiceValidateException;

    /**
     * Update the given Entity
     *
     * @param t - entity to be updated
     * @throws ServiceException         - if something fails at Service layer
     * @throws ServiceValidateException - if something fails at Service validation
     */
    void update(T t) throws ServiceException, ServiceValidateException;

    /**
     * Returns a list of all Entities
     *
     * @return a list of all Entities
     * @throws ServiceException - if something fails at Service layer
     */
    List<T> getAll() throws ServiceException;

    /**
     * Delete the given Entity
     *
     * @param t - The entity to be deleted
     * @throws ServiceException - if something fails at Service layer
     */
    void delete(T t) throws ServiceException;

    /**
     * Returns the Entity matching the given ID
     *
     * @param id - The ID of the Entity to be returned
     * @return - the Entity matching the given ID
     * @throws ServiceException - if something fails at Service layer
     */
    T getById(Long id) throws ServiceException;
}
